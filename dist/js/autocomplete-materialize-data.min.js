/**
 * @file autocomplete-materialize-data.min.js
 * @brief Plugin Vainilla Javascript con las funciones necesarias para implementar un AutoComplete de Materialize con Data Structure. 
 * @author Sebasti√°n Seval <eseval@santafe.gov.ar>
 * @version 0.1
 * @license MIT license <http://www.opensource.org/licenses/MIT>
 *
 * autocomplete-materialize-data.min.js is a Vainilla Javascript plugin to extend Materialize Auto Complete element. 
 *
 */ !function(){function t(t){try{let e=t.data,n=document.querySelector(`[id=${this.id}]`),i=n.value;if(i in e)return e[i];throw ReferenceError("Data not found!")}catch(r){return console.error(r),{}}}function e(e,n){try{void 0!=n.isTrusted&&(data=t.call(this,e),e.onSelect&&e.onSelect(data))}catch(i){console.error(i)}}function n(){try{let t=this.settings;document.querySelector(`[id=${this.element}]`).addEventListener("change",function(n){e.call(this,t,n)})}catch(n){console.error(n)}}this.extendAutocomplete=function(){try{let t={element:"",class:".autocomplete",data:{},onSelect:function(){console.log(arguments[0])}};this.settings=arguments[0]&&"object"==typeof arguments[0]?function t(e,n){try{return Object.keys(n).forEach(t=>{n.hasOwnProperty(t)&&(e[t]=n[t])}),e}catch(i){console.error(i)}}(t,arguments[0]):t,this.element=this.settings.element&&"string"==typeof this.settings.element?this.settings.element:document.querySelector(this.settings.class).id,this.init()}catch(e){console.error(e)}},extendAutocomplete.prototype.init=function(){n.call(this)}}();